// Code generated by Icestudio 0.11.0-rc2

`default_nettype none

//---- Top entity
module main #(
 parameter v9ac438 = 25
) (
 input vbf6b1c,
 input v1f0580,
 input vclk,
 output v363ffd,
 output v993960,
 output v2cee8e,
 output ve243bb
);
 localparam p0 = v9ac438;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 wire w19;
 wire w20;
 wire w21;
 wire w22;
 wire w23;
 wire w24;
 wire w25;
 assign w15 = vbf6b1c;
 assign w16 = v1f0580;
 assign w17 = v1f0580;
 assign w18 = v1f0580;
 assign w19 = v1f0580;
 assign ve243bb = w20;
 assign v363ffd = w21;
 assign v993960 = w22;
 assign v2cee8e = w24;
 assign w25 = vclk;
 assign w2 = w1;
 assign w3 = w1;
 assign w3 = w2;
 assign w4 = w1;
 assign w4 = w2;
 assign w4 = w3;
 assign w8 = w7;
 assign w14 = w6;
 assign w17 = w16;
 assign w18 = w16;
 assign w18 = w17;
 assign w19 = w16;
 assign w19 = w17;
 assign w19 = w18;
 assign w20 = w5;
 assign w21 = w10;
 assign w22 = w12;
 assign w23 = w9;
 assign w24 = w11;
 v6a5074 #(
  .v100e1b(p0)
 ) v3f79b7 (
  .v2efea4(w1),
  .v0daa9e(w25)
 );
 v8b89a5 vb4139b (
  .vb55943(w1),
  .vc24d9f(w6),
  .vef4cea(w13)
 );
 v8b89a5 v98d3e8 (
  .vb55943(w2),
  .vef4cea(w5),
  .vc24d9f(w7)
 );
 v8b89a5 v705b2d (
  .vb55943(w3),
  .vc24d9f(w9),
  .vef4cea(w10)
 );
 v8b89a5 v7c64d3 (
  .vb55943(w4),
  .vc24d9f(w11),
  .vef4cea(w12)
 );
 v2d00dc vfbd77b (
  .v741632(w5),
  .v765971(w6),
  .v9a9c84(w7),
  .v675419(w17)
 );
 v2d00dc v35e44e (
  .v765971(w8),
  .v741632(w10),
  .v675419(w18),
  .v9a9c84(w23)
 );
 v2d00dc v7be6a6 (
  .v765971(w9),
  .v9a9c84(w11),
  .v741632(w12),
  .v675419(w19)
 );
 v2d00dc vd54a4d (
  .v741632(w13),
  .v9a9c84(w14),
  .v765971(w15),
  .v675419(w16)
 );
endmodule

//---- Top entity
module v6a5074 #(
 parameter v100e1b = 22
) (
 input v0daa9e,
 output v2efea4
);
 localparam p2 = v100e1b;
 wire w0;
 wire w1;
 assign v2efea4 = w0;
 assign w1 = v0daa9e;
 v6a5074_vac7386 #(
  .N(p2)
 ) vac7386 (
  .clk_out(w0),
  .clk_in(w1)
 );
endmodule

//---------------------------------------------------
//-- PrescalerN
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Parametric N-bits prescaler
//---------------------------------------------------

module v6a5074_vac7386 #(
 parameter N = 0
) (
 input clk_in,
 output clk_out
);
 //-- Number of bits of the prescaler
 //parameter N = 22;
 
 //-- divisor register
 reg [N-1:0] divcounter;
 
 //-- N bit counter
 always @(posedge clk_in)
   divcounter <= divcounter + 1;
 
 //-- Use the most significant bit as output
 assign clk_out = divcounter[N-1];
endmodule
//---- Top entity
module v8b89a5 (
 input vb55943,
 input vef4cea,
 output vc24d9f
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = vef4cea;
 assign w1 = vb55943;
 assign vc24d9f = w2;
 v8b89a5_v526aa2 v526aa2 (
  .d(w0),
  .clk(w1),
  .q(w2)
 );
endmodule

//---------------------------------------------------
//-- Flip-flop D
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Delay flip-flop
//---------------------------------------------------

module v8b89a5_v526aa2 (
 input clk,
 input d,
 output q
);
 // D flip-flop
 
 reg q = 1'b0;
 
 always @(posedge clk)
 begin
   q <= d;
 end
 
 
endmodule
//---- Top entity
module v2d00dc (
 input v765971,
 input v9a9c84,
 input v675419,
 output v741632
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign v741632 = w0;
 assign w1 = v765971;
 assign w2 = v9a9c84;
 assign w3 = v675419;
 v2d00dc_v7f68b8 v7f68b8 (
  .o(w0),
  .in0(w1),
  .in1(w2),
  .sel0(w3)
 );
endmodule

//---------------------------------------------------
//-- Mux 2:1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Multiplexer 2:1
//---------------------------------------------------

module v2d00dc_v7f68b8 (
 input in0,
 input in1,
 input sel0,
 output o
);
 reg _o;
 
 always @(*) begin
     case(sel0)
         0: _o = in0;
         1: _o = in1;
         default: _o = in0;
     endcase
 end
 
 assign o = _o;
endmodule
