// Code generated by Icestudio 0.11.0-rc2

`default_nettype none

//---- Top entity
module main #(
 parameter v9ac438 = 25,
 parameter vd75b87 = 21
) (
 input v5985aa,
 input vclk,
 output vd9a1e7,
 output [0:2] vinit
);
 localparam p0 = v9ac438;
 localparam p4 = vd75b87;
 wire w1;
 wire w2;
 wire w3;
 wire w5;
 wire w6;
 wire w7;
 assign vd9a1e7 = w1;
 assign w5 = v5985aa;
 assign w6 = vclk;
 assign w7 = vclk;
 assign w7 = w6;
 v6a5074 #(
  .v100e1b(p0)
 ) v3f79b7 (
  .v2efea4(w2),
  .v0daa9e(w6)
 );
 v6a5074 #(
  .v100e1b(p4)
 ) vc33c2f (
  .v2efea4(w3),
  .v0daa9e(w7)
 );
 v2d00dc v4b99fc (
  .v741632(w1),
  .v765971(w2),
  .v9a9c84(w3),
  .v675419(w5)
 );
 assign vinit = 3'b000;
endmodule

//---- Top entity
module v6a5074 #(
 parameter v100e1b = 22
) (
 input v0daa9e,
 output v2efea4
);
 localparam p2 = v100e1b;
 wire w0;
 wire w1;
 assign v2efea4 = w0;
 assign w1 = v0daa9e;
 v6a5074_vac7386 #(
  .N(p2)
 ) vac7386 (
  .clk_out(w0),
  .clk_in(w1)
 );
endmodule

//---------------------------------------------------
//-- PrescalerN
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Parametric N-bits prescaler
//---------------------------------------------------

module v6a5074_vac7386 #(
 parameter N = 0
) (
 input clk_in,
 output clk_out
);
 //-- Number of bits of the prescaler
 //parameter N = 22;
 
 //-- divisor register
 reg [N-1:0] divcounter;
 
 //-- N bit counter
 always @(posedge clk_in)
   divcounter <= divcounter + 1;
 
 //-- Use the most significant bit as output
 assign clk_out = divcounter[N-1];
endmodule
//---- Top entity
module v2d00dc (
 input v765971,
 input v9a9c84,
 input v675419,
 output v741632
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign v741632 = w0;
 assign w1 = v765971;
 assign w2 = v9a9c84;
 assign w3 = v675419;
 v2d00dc_v7f68b8 v7f68b8 (
  .o(w0),
  .in0(w1),
  .in1(w2),
  .sel0(w3)
 );
endmodule

//---------------------------------------------------
//-- Mux 2:1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Multiplexer 2:1
//---------------------------------------------------

module v2d00dc_v7f68b8 (
 input in0,
 input in1,
 input sel0,
 output o
);
 reg _o;
 
 always @(*) begin
     case(sel0)
         0: _o = in0;
         1: _o = in1;
         default: _o = in0;
     endcase
 end
 
 assign o = _o;
endmodule
