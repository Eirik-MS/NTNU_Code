// Code generated by Icestudio 0.10-rc1

`default_nettype none

//---- Top entity
module main (
 input v3a3917,
 input v434297,
 output vbb8f78,
 output v54c7da,
 output v95929b,
 output ve5e727,
 output vc16242,
 output v7c74a1,
 output v15c4ec,
 output [0:3] vinit
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 wire w19;
 wire w20;
 wire w21;
 wire w22;
 wire w23;
 wire w24;
 wire w25;
 wire w26;
 wire w27;
 wire w28;
 wire w29;
 wire w30;
 wire w31;
 wire w32;
 wire w33;
 wire w34;
 wire w35;
 wire w36;
 assign vbb8f78 = w21;
 assign w22 = v3a3917;
 assign v54c7da = w23;
 assign w24 = v3a3917;
 assign v7c74a1 = w25;
 assign w26 = v3a3917;
 assign vc16242 = w27;
 assign v15c4ec = w28;
 assign v95929b = w29;
 assign ve5e727 = w30;
 assign w31 = v434297;
 assign w32 = v434297;
 assign w33 = v434297;
 assign w7 = w6;
 assign w11 = w9;
 assign w15 = w10;
 assign w17 = w12;
 assign w19 = w14;
 assign w24 = w22;
 assign w26 = w22;
 assign w26 = w24;
 assign w32 = w31;
 assign w33 = w31;
 assign w33 = w32;
 assign w34 = w10;
 assign w34 = w15;
 assign w35 = w12;
 assign w35 = w17;
 v09410d v70c0a6 (
  .vaca3de(w0),
  .vfa77e1(w1),
  .v24ac9e(w2),
  .v661550(w9),
  .ve4c5f5(w11),
  .v111afb(w13),
  .v64a7ae(w15),
  .vd2bcbe(w17),
  .v7da27b(w19)
 );
 v1e29c3 vb8f253 (
  .vbb243e(w0),
  .v5b6bf5(w1),
  .v1622f8(w2),
  .v2c8fb2(w3),
  .vc95306(w4),
  .v145911(w5),
  .ve5c723(w6),
  .v82873b(w7),
  .v44d57c(w8),
  .vb2a2fe(w36)
 );
 v82cb2c vc19d1f (
  .v9644b7(w16),
  .v12aa34(w18),
  .v8a976f(w20),
  .va59002(w21),
  .vaf3dd0(w23),
  .vb3b981(w25),
  .v17e0ce(w27),
  .v82bb46(w28),
  .va9c29c(w29),
  .vbe2d06(w30)
 );
 v8b89a5 vd14986 (
  .vef4cea(w5),
  .vc24d9f(w14),
  .vb55943(w31)
 );
 v8b89a5 v7f058b (
  .vef4cea(w3),
  .vc24d9f(w12),
  .vb55943(w32)
 );
 v8b89a5 vc9fced (
  .vef4cea(w4),
  .vc24d9f(w10),
  .vb55943(w33)
 );
 vc4dd08 v9721f8 (
  .v608bd9(w6)
 );
 v8b89a5 v058679 (
  .vef4cea(w14),
  .vc24d9f(w16),
  .vb55943(w22)
 );
 vc83dcd v0e87dc (
  .v608bd9(w8)
 );
 v8b89a5 v81d698 (
  .vef4cea(w12),
  .vc24d9f(w18),
  .vb55943(w24)
 );
 vc4dd08 v2d4a14 (
  .v608bd9(w9)
 );
 v8b89a5 v4f8afd (
  .vef4cea(w10),
  .vc24d9f(w20),
  .vb55943(w26)
 );
 vc83dcd vd32edb (
  .v608bd9(w13)
 );
 v4e30df v1cf913 (
  .v0e28cb(w34),
  .v3ca442(w35),
  .vcbab45(w36)
 );
 assign vinit = 4'b0000;
endmodule

//---- Top entity
module v09410d (
 input v111afb,
 input v661550,
 input ve4c5f5,
 input v7da27b,
 input vd2bcbe,
 input v64a7ae,
 output vbd3cdf,
 output v24ac9e,
 output vfa77e1,
 output vaca3de
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 wire w19;
 wire w20;
 wire w21;
 wire w22;
 wire w23;
 wire w24;
 wire w25;
 wire w26;
 wire w27;
 assign w0 = v111afb;
 assign v24ac9e = w13;
 assign vfa77e1 = w14;
 assign vaca3de = w15;
 assign vbd3cdf = w16;
 assign w17 = v111afb;
 assign w18 = v661550;
 assign w19 = vd2bcbe;
 assign w20 = vd2bcbe;
 assign w21 = v661550;
 assign w22 = v7da27b;
 assign w23 = v7da27b;
 assign w24 = ve4c5f5;
 assign w25 = v64a7ae;
 assign w26 = v64a7ae;
 assign w27 = ve4c5f5;
 assign w3 = w1;
 assign w4 = w2;
 assign w9 = w8;
 assign w10 = w7;
 assign w17 = w0;
 assign w20 = w19;
 assign w21 = w18;
 assign w23 = w22;
 assign w26 = w25;
 assign w27 = w24;
 ve9ceb2 v6d9e53 (
  .v0e28cb(w0),
  .vcbab45(w13),
  .v3ca442(w22)
 );
 ve9ceb2 va9bd7c (
  .vcbab45(w1),
  .v0e28cb(w18),
  .v3ca442(w19)
 );
 ve9ceb2 v8d1781 (
  .v3ca442(w1),
  .v0e28cb(w2),
  .vcbab45(w14)
 );
 v7ebc90 vf3d08e (
  .vcbab45(w2),
  .v0e28cb(w17),
  .v3ca442(w23)
 );
 v7ebc90 v2288ad (
  .v3ca442(w3),
  .v0e28cb(w4),
  .vcbab45(w5)
 );
 v528969 v3d729c (
  .v0e28cb(w5),
  .v3ca442(w6),
  .vcbab45(w7)
 );
 v7ebc90 v3be464 (
  .vcbab45(w6),
  .v3ca442(w20),
  .v0e28cb(w21)
 );
 ve9ceb2 vacc2fc (
  .vcbab45(w8),
  .v0e28cb(w24),
  .v3ca442(w25)
 );
 ve9ceb2 v1691ef (
  .v0e28cb(w7),
  .v3ca442(w8),
  .vcbab45(w15)
 );
 v7ebc90 v4bcd1e (
  .vcbab45(w11),
  .v0e28cb(w26),
  .v3ca442(w27)
 );
 v7ebc90 v74d429 (
  .v0e28cb(w9),
  .v3ca442(w10),
  .vcbab45(w12)
 );
 v528969 v03961c (
  .v3ca442(w11),
  .v0e28cb(w12),
  .vcbab45(w16)
 );
endmodule

//---------------------------------------------------
//-- 3-bit Adder
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 
//---------------------------------------------------
//---- Top entity
module ve9ceb2 (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 ve9ceb2_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

//---------------------------------------------------
//-- XOR
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- XOR logic gate
//---------------------------------------------------

module ve9ceb2_vf4938a (
 input a,
 input b,
 output c
);
 // XOR logic gate
 
 assign c = a ^ b;
endmodule
//---- Top entity
module v7ebc90 (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 v7ebc90_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

//---------------------------------------------------
//-- AND
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- AND logic gate
//---------------------------------------------------

module v7ebc90_vf4938a (
 input a,
 input b,
 output c
);
 // AND logic gate
 
 assign c = a & b;
endmodule
//---- Top entity
module v528969 (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 v528969_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

//---------------------------------------------------
//-- OR
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- OR logic gate
//---------------------------------------------------

module v528969_vf4938a (
 input a,
 input b,
 output c
);
 // OR logic gate
 
 assign c = a | b;
endmodule
//---- Top entity
module v1e29c3 (
 input vb2a2fe,
 input v44d57c,
 input v82873b,
 input ve5c723,
 input v1622f8,
 input v5b6bf5,
 input vbb243e,
 output v145911,
 output v2c8fb2,
 output vc95306
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 assign w0 = v44d57c;
 assign w1 = v82873b;
 assign w2 = ve5c723;
 assign w3 = vbb243e;
 assign w4 = v5b6bf5;
 assign w5 = v1622f8;
 assign w6 = vb2a2fe;
 assign w7 = vb2a2fe;
 assign w8 = vb2a2fe;
 assign vc95306 = w9;
 assign v2c8fb2 = w10;
 assign v145911 = w11;
 assign w7 = w6;
 assign w8 = w6;
 assign w8 = w7;
 v2d00dc v73bceb (
  .v765971(w0),
  .v9a9c84(w5),
  .v675419(w6),
  .v741632(w11)
 );
 v2d00dc v8a7071 (
  .v765971(w1),
  .v9a9c84(w4),
  .v675419(w7),
  .v741632(w10)
 );
 v2d00dc v9b46c7 (
  .v765971(w2),
  .v9a9c84(w3),
  .v675419(w8),
  .v741632(w9)
 );
endmodule

//---------------------------------------------------
//-- 3-bit MUX
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 
//---------------------------------------------------
//---- Top entity
module v2d00dc (
 input v765971,
 input v9a9c84,
 input v675419,
 output v741632
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign v741632 = w0;
 assign w1 = v765971;
 assign w2 = v9a9c84;
 assign w3 = v675419;
 v2d00dc_v7f68b8 v7f68b8 (
  .o(w0),
  .in0(w1),
  .in1(w2),
  .sel0(w3)
 );
endmodule

//---------------------------------------------------
//-- Mux 2:1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Multiplexer 2:1
//---------------------------------------------------

module v2d00dc_v7f68b8 (
 input in0,
 input in1,
 input sel0,
 output o
);
 reg _o;
 
 always @(*) begin
     case(sel0)
         0: _o = in0;
         1: _o = in1;
         default: _o = in0;
     endcase
 end
 
 assign o = _o;
endmodule
//---- Top entity
module v82cb2c (
 input v9644b7,
 input v12aa34,
 input v8a976f,
 output vbe2d06,
 output va59002,
 output vaf3dd0,
 output vb3b981,
 output v17e0ce,
 output v82bb46,
 output va9c29c
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 wire w9;
 wire w10;
 wire w11;
 wire w12;
 wire w13;
 wire w14;
 wire w15;
 wire w16;
 wire w17;
 wire w18;
 assign w0 = v8a976f;
 assign w1 = v8a976f;
 assign w3 = v12aa34;
 assign va59002 = w4;
 assign vaf3dd0 = w6;
 assign w7 = v9644b7;
 assign w9 = v12aa34;
 assign w10 = v8a976f;
 assign w11 = v8a976f;
 assign v82bb46 = w11;
 assign w12 = v8a976f;
 assign va9c29c = w12;
 assign vb3b981 = w13;
 assign w14 = v8a976f;
 assign v17e0ce = w16;
 assign vbe2d06 = w17;
 assign w17 = v9644b7;
 assign w1 = w0;
 assign w9 = w3;
 assign w10 = w0;
 assign w10 = w1;
 assign w11 = w0;
 assign w11 = w1;
 assign w11 = w10;
 assign w12 = w0;
 assign w12 = w1;
 assign w12 = w10;
 assign w12 = w11;
 assign w13 = w6;
 assign w14 = w0;
 assign w14 = w1;
 assign w14 = w10;
 assign w14 = w11;
 assign w14 = w12;
 assign w15 = w5;
 assign w17 = w7;
 v96f098 ve6bb64 (
  .v0e28cb(w0),
  .vcbab45(w2)
 );
 v7ebc90 v2e9ae6 (
  .v3ca442(w2),
  .v0e28cb(w3),
  .vcbab45(w5)
 );
 v528969 veac196 (
  .v3ca442(w1),
  .vcbab45(w4),
  .v0e28cb(w5)
 );
 v7ebc90 vab3faa (
  .v0e28cb(w8),
  .v3ca442(w9),
  .vcbab45(w18)
 );
 v96f098 v1d53f9 (
  .v0e28cb(w7),
  .vcbab45(w8)
 );
 v7ebc90 v545add (
  .vcbab45(w6),
  .v3ca442(w10),
  .v0e28cb(w18)
 );
 v528969 v1007ac (
  .v3ca442(w14),
  .v0e28cb(w15),
  .vcbab45(w16)
 );
endmodule

//---------------------------------------------------
//-- LED DEKODER
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- 
//---------------------------------------------------
//---- Top entity
module v96f098 (
 input v0e28cb,
 output vcbab45
);
 wire w0;
 wire w1;
 assign w0 = v0e28cb;
 assign vcbab45 = w1;
 v96f098_vd54ca1 vd54ca1 (
  .a(w0),
  .c(w1)
 );
endmodule

//---------------------------------------------------
//-- NOT
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- NOT logic gate
//---------------------------------------------------

module v96f098_vd54ca1 (
 input a,
 output c
);
 // NOT logic gate
 
 assign c = ~ a;
endmodule
//---- Top entity
module v8b89a5 (
 input vb55943,
 input vef4cea,
 output vc24d9f
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = vef4cea;
 assign w1 = vb55943;
 assign vc24d9f = w2;
 v8b89a5_v526aa2 v526aa2 (
  .d(w0),
  .clk(w1),
  .q(w2)
 );
endmodule

//---------------------------------------------------
//-- Flip-flop D
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Delay flip-flop
//---------------------------------------------------

module v8b89a5_v526aa2 (
 input clk,
 input d,
 output q
);
 // D flip-flop
 
 reg q = 1'b0;
 
 always @(posedge clk)
 begin
   q <= d;
 end
 
 
endmodule
//---- Top entity
module vc4dd08 (
 output v608bd9
);
 wire w0;
 assign v608bd9 = w0;
 vc4dd08_v68c173 v68c173 (
  .v(w0)
 );
endmodule

//---------------------------------------------------
//-- Bit 0
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Assign 0 to the output wire
//---------------------------------------------------

module vc4dd08_v68c173 (
 output v
);
 // Bit 0
 
 assign v = 1'b0;
endmodule
//---- Top entity
module vc83dcd (
 output v608bd9
);
 wire w0;
 assign v608bd9 = w0;
 vc83dcd_v68c173 v68c173 (
  .v(w0)
 );
endmodule

//---------------------------------------------------
//-- Bit 1
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- Assign 1 to the output wire
//---------------------------------------------------

module vc83dcd_v68c173 (
 output v
);
 // Bit 1
 
 assign v = 1'b1;
endmodule
//---- Top entity
module v4e30df (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 v4e30df_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

//---------------------------------------------------
//-- NAND
//-- - - - - - - - - - - - - - - - - - - - - - - - --
//-- NAND logic gate
//---------------------------------------------------

module v4e30df_vf4938a (
 input a,
 input b,
 output c
);
 // NAND logic gate
 
 assign c = ~(a & b);
endmodule
